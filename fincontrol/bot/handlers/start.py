from aiogram import Router
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from django.utils import timezone
from datetime import timedelta
from transactions.models import Transaction
from django.db.models import Sum
from asgiref.sync import sync_to_async
from ..keyboards.report_kb import report_keyboard

router = Router()

# ===== ORM helpers =====
@sync_to_async
def get_today_expenses(user_id):
    today = timezone.now().date()
    return Transaction.objects.filter(
        user__telegram_id=user_id,
        date=today,
        type='expense'
    ).aggregate(sum=Sum('amount'))['sum'] or 0

@sync_to_async
def get_week_expenses(user_id):
    start = timezone.now().date() - timedelta(days=7)
    return Transaction.objects.filter(
        user__telegram_id=user_id,
        date__gte=start,
        type='expense'
    ).aggregate(sum=Sum('amount'))['sum'] or 0

@sync_to_async
def get_category_expenses(user_id, category):
    return Transaction.objects.filter(
        user__telegram_id=user_id,
        category__iexact=category,
        type='expense'
    ).aggregate(sum=Sum('amount'))['sum'] or 0

@sync_to_async
def get_user_by_telegram_id(telegram_id: int):
    return User.objects.filter(telegram_id=telegram_id).first()

# ===== Handlers =====

@router.message(Command("start"))
async def cmd_start(message: Message):
    user = await get_user_by_telegram_id(message.from_user.id)

    if user:
        # –£–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω
        await message.answer(
            f"üëã –ü—Ä–∏–≤–µ—Ç, {user.username or '–¥—Ä—É–≥'}!\n\n"
            "–¢–≤–æ–π Telegram —É–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –∞–∫–∫–∞—É–Ω—Ç—É ‚úÖ\n"
            "–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å:\n"
            "‚Ä¢ –ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è—Ö\n"
            "‚Ä¢ –ü–æ–ª—É—á–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã\n"
            "‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞\n\n"
            "‚ÑπÔ∏è –í–≤–µ–¥–∏ /help, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã."
        )
    else:
        # –ù–µ –ø—Ä–∏–≤—è–∑–∞–Ω
        await message.answer(
            "üëã –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî —Ç–≤–æ–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ø–æ–º–æ—â–Ω–∏–∫ üí∞\n\n"
            "–ß—Ç–æ–±—ã —è –º–æ–≥ –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã, –Ω—É–∂–Ω–æ –ø—Ä–∏–≤—è–∑–∞—Ç—å Telegram –∫ –∞–∫–∫–∞—É–Ω—Ç—É.\n\n"
            "üîó –î–ª—è —ç—Ç–æ–≥–æ:\n"
            "1. –ó–∞–π–¥–∏ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –Ω–∞ —Å–∞–π—Ç–µ\n"
            "2. –°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∫–æ–¥ –ø—Ä–∏–≤—è–∑–∫–∏\n"
            "3. –û—Ç–ø—Ä–∞–≤—å –µ–≥–æ —Å—é–¥–∞ –∫–æ–º–∞–Ω–¥–æ–π:\n"
            "`/link <–∫–æ–¥>`\n\n"
            "–ü–æ—Å–ª–µ –ø—Ä–∏–≤—è–∑–∫–∏ —Ç–µ–±–µ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏.\n"
            "‚ÑπÔ∏è –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ ‚Äî /help"
        )

@router.message(Command("help"))
async def cmd_help(message: Message):
    text = (
        "ü§ñ *–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ø–æ–º–æ—â–Ω–∏–∫ ‚Äî —Å–ø—Ä–∞–≤–∫–∞*\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "‚Ä¢ /start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π\n"
        "‚Ä¢ /link `<–∫–æ–¥>` ‚Äî –ø—Ä–∏–≤—è–∑–∞—Ç—å Telegram –∫ –∞–∫–∫–∞—É–Ω—Ç—É (–∫–æ–¥ –±–µ—Ä—ë—Ç—Å—è –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –Ω–∞ —Å–∞–π—Ç–µ)\n"
        "‚Ä¢ /today ‚Äî —Ä–∞—Å—Ö–æ–¥—ã –∑–∞ —Å–µ–≥–æ–¥–Ω—è\n"
        "‚Ä¢ /week ‚Äî —Ä–∞—Å—Ö–æ–¥—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π\n"
        "‚Ä¢ /category `<–Ω–∞–∑–≤–∞–Ω–∏–µ>` ‚Äî —Ä–∞—Å—Ö–æ–¥—ã –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏\n"
        "‚Ä¢ /report ‚Äî –∫—Ä–∞—Ç–∫–∏–π –æ—Ç—á—ë—Ç –∑–∞ —Å–µ–≥–æ–¥–Ω—è –∏ –Ω–µ–¥–µ–ª—é\n"
        "‚Ä¢ /help ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n"
        "üí° *–°–æ–≤–µ—Ç—ã:*\n"
        "‚Äî –ü—Ä–∏–≤—è–∂–∏ Telegram —á–µ—Ä–µ–∑ /link, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã.\n"
        "‚Äî –ò—Å–ø–æ–ª—å–∑—É–π /category –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ç—Ä–∞—Ç.\n"
        "‚Äî –û—Ç—á—ë—Ç /report —É–¥–æ–±–Ω–æ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –≤ –Ω–∞—á–∞–ª–µ –¥–Ω—è.\n\n"
        "üåê –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç: [–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç](https://example.com)"
    )
    await message.answer(text, parse_mode="Markdown", disable_web_page_preview=True)

@router.message(Command("today"))
async def cmd_today(message: Message):
    total = await get_today_expenses(message.from_user.id)
    await message.answer(f"üí∏ –†–∞—Å—Ö–æ–¥—ã –∑–∞ —Å–µ–≥–æ–¥–Ω—è: {total:.2f}")

@router.message(Command("week"))
async def cmd_week(message: Message):
    total = await get_week_expenses(message.from_user.id)
    await message.answer(f"üìä –†–∞—Å—Ö–æ–¥—ã –∑–∞ –Ω–µ–¥–µ–ª—é: {total:.2f}")

@router.message(Command("category"))
async def cmd_category(message: Message):
    args = message.text.split(maxsplit=1)
    if len(args) < 2:
        await message.answer("–£–∫–∞–∂–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é: /category <–Ω–∞–∑–≤–∞–Ω–∏–µ>")
        return
    cat = args[1]
    total = await get_category_expenses(message.from_user.id, cat)
    await message.answer(f"üìÇ –†–∞—Å—Ö–æ–¥—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{cat}': {total:.2f}")

@router.message(Command("report"))
async def cmd_report(message: Message):
    expenses_today = await get_today_expenses(message.from_user.id)
    expenses_week = await get_week_expenses(message.from_user.id)
    await message.answer(
        f"üìÖ –°–µ–≥–æ–¥–Ω—è: {expenses_today:.2f}\n"
        f"üìÜ –ù–µ–¥–µ–ª—è: {expenses_week:.2f}",
        reply_markup=report_keyboard()
    )

@router.callback_query()
async def callbacks(call: CallbackQuery):
    if call.data == "details":
        await call.message.edit_text("üîç –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç—á—ë—Ç...")
    elif call.data == "compare_week":
        await call.message.edit_text("üìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø—Ä–æ—à–ª–æ–π –Ω–µ–¥–µ–ª–µ–π...")
    elif call.data == "add_expense":
        await call.message.edit_text("‚ûï –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–∞—Ç—ã (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)")
    await call.answer()
